name: BuildImages
on:
  push:
    branches:
      - master

jobs:

  aria2c:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "aria2c"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  aria2c-webui:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "aria2c-webui"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  asterisk:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "asterisk"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  buildah-builder:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "buildah-builder"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  dmarc-analyzer:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "dmarc-analyzer"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  dnsmasq:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "dnsmasq"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  eslint:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "eslint"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  ffvnc:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "ffvnc"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  golang:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "golang"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  mediamtx:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "mediamtx"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  node-red:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "node-red"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  openapi:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "openapi"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  platformio:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "platformio"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  postgres-dbmate:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "postgres-dbmate"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  qbittorrent:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "qbittorrent"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  rsyslog:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "rsyslog"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  vscode-server-ipython:
    runs-on: host-linux-amd64
    container:
      volumes:
        - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        uses: https://git.netsplit.it/actions/git-clone@v2
        with:
          token: ${{ github.token }}
      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV
      - name: Build and push image
        run: >
          podman run -it --rm --privileged
          -v "$(pwd):/src/"
          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
          -v "$HOME/.docker/auth.json:/auth.json:ro"
          -e REGISTRY_AUTH_FILE=/auth.json
          --workdir /src/
          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
          /bin/bash -x build_images.sh "vscode-server-ipython"
      - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


name: BuildImages
on:
#  push:
#    branches:
#      - master
  workflow_dispatch:

jobs:

  android-sdk:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "android-sdk"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "android-sdk"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  aria2c:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "aria2c"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "aria2c"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  aria2c-webui:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "aria2c-webui"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "aria2c-webui"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  asterisk:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "asterisk"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "asterisk"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  buildah-builder:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "buildah-builder"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "buildah-builder"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  certbot-hetzner:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "certbot-hetzner"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "certbot-hetzner"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  dmarc-analyzer:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "dmarc-analyzer"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "dmarc-analyzer"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  dnsmasq:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "dnsmasq"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "dnsmasq"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  eslint:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "eslint"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "eslint"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  ffvnc:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "ffvnc"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "ffvnc"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  golang:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "golang"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "golang"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  hugo:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "hugo"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "hugo"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  markdown-toc:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "markdown-toc"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "markdown-toc"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  netdiag:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "netdiag"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "netdiag"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  node-red:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "node-red"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "node-red"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  openapi:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "openapi"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "openapi"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  platformio:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "platformio"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "platformio"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  postgres-dbmate:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "postgres-dbmate"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "postgres-dbmate"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  qbittorrent:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "qbittorrent"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "qbittorrent"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  rsyslog:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "rsyslog"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "rsyslog"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()


  vscode-server-ipython:
    runs-on: privileged
    container:
      image: hub.netsplit.it/utilities/buildah-builder:1.37.3-3
      credentials:
        username: ${{ secrets.NETSPLIT_REGISTRY_USER }}
        password: ${{ secrets.NETSPLIT_REGISTRY_PASS }}
      #volumes:
      #  - /var/lib/gitea-act-runner/.cache/:/var/lib/gitea-act-runner/.cache/
    steps:
      - name: Checking out the repository
        run: |
          echo "Cloning the repository"
          git init
          git remote add origin "https://git:${{ github.token }}@git.netsplit.it/${GITHUB_REPOSITORY}"
          git fetch --depth 1 origin "$GITHUB_SHA"
          git checkout FETCH_HEAD

      - name: Set credentials for registries
        run: |
          mkdir -p "$HOME/.docker/"
          export REGISTRY_AUTH_FILE=$HOME/.docker/auth.json

          export NETSPLIT_CREDS=$(echo -n '${{ secrets.NETSPLIT_REGISTRY_USER }}:${{ secrets.NETSPLIT_REGISTRY_PASS }}' | base64 -w 0)
          export DOCKER_CREDS=$(echo -n '${{ secrets.DOCKER_REGISTRY_USER }}:${{ secrets.DOCKER_REGISTRY_PASS }}' | base64 -w 0)
          printf '{"auths": {"hub.netsplit.it": {"auth": "%s"}, "docker.io": {"auth": "%s"}}}' "$NETSPLIT_CREDS" "$DOCKER_CREDS" > "$HOME/.docker/auth.json"
          printf "REGISTRY_AUTH_FILE=$REGISTRY_AUTH_FILE" >> $GITHUB_ENV

      - name: Build and push image
        run: /bin/bash -x build_images.sh "vscode-server-ipython"
#        run: >
#          podman run -it --rm --privileged
#          -v "$(pwd):/src/"
#          -v /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
#          -v "$HOME/.docker/auth.json:/auth.json:ro"
#          -e REGISTRY_AUTH_FILE=/auth.json
#          --workdir /src/
#          hub.netsplit.it/utilities/buildah-builder:1.36.0-2
#          /bin/bash -x build_images.sh "vscode-server-ipython"

     - name: Cleanup
        run: |
          rm -f "$REGISTRY_AUTH_FILE"
        if: always()

